VectorMean <- mean(Vector)
VectorSd <- sd(Vector)
lowBoundary <- VectorMean - 2*VectorSd
HighBoundary <- VectorMean + 2*VectorSd
goodFlag <- (Vector > lowBoundary) & (Vector < HighBoundary)
Vector <- Vector[goodFlag]
Vector
# Outlier Removal
Vector <- c('a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'b', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', 'a', 'a', 'a', 'a')
# Category Outlier is 'd' because it occurs less than 5% of the time
Vector
Vector.modified <- Vector[Vector != 'd']
setdiff(Vector, Vector_mod)
# Relabel
c('BS', 'MS', 'PhD', 'HS', 'BSc', 'Masters', 'High School', 'Masters', 'Masters', 'BA', 'Bachelors', 'MS', 'MS')
Vector <- c('BS', 'MS', 'PhD', 'HS', 'BSc', 'Masters', 'High School', 'Masters', 'Masters', 'BA', 'Bachelors', 'MS', 'MS')
unique(Vector)
length(unique(Vector))
Vector[Vector == 'Bachelors'] <- 'BS'
length(unique(Vector))
Vector[Vector == 'BSc'] <- 'BS'
length(unique(Vector))
Vector[Vector == 'BA'] <- 'BS'
length(unique(Vector))
Vector[Vector == 'Masters'] <- 'MS'
length(unique(Vector))
Vector[Vector == 'High School'] <- 'HS'
length(unique(Vector))
Vector
# Turn codes into years of college
# Exercise
#Normalization
# Start fresh
rm(list=ls())
Vector <- c(1, -1, -5, -1, -1, -19, 3, -1, -1, -5)
# Linear normalization maps data in a linear fashion:  normalizedVector <- Vector*slope + offset
# Min Max normalization maps from 0 to 1.
# y = a + bx
# OR:
# y = (x - c)/d; Where:  a = -c/d; b = 1/d
# "c" adjusts min value to zero:
minValue <- min(Vector)
# range adjusts max value to 1
#  range is the min subtracted from the max
range <- max(Vector) - minValue
Vector<- (Vector - minValue)/range
min(Vector)
max(Vector)
Vector
rm(list=ls())
# Relabel and cast this vector into a number:
c('one', 'two', 3, 4, 5, 6, 7, 8, 9, 0, 1)
rm(list=ls())
# Binarization:
#  Binarization turns columns of categories into a columns of binaries:
#  You start out with a vector called vehicle that can contain three categories:  car, truck, bicycle
# Vehicle vector looks like the following:
#  c(car, bicycle, bicycle, bicycle, car, car, truck, bicycle, truck, bicycle)
# You create three columns called car, truck, and bicycle:
#  car <- c(1,0,0,0,1,1,0,0,0,0)
#  truck <- c(0,0,0,0,0,0,1,0,1,0)
#  bicycle <- c(0,1,1,1,0,0,0,1,0,1)
# Binning
Vector<- c(1, 1:5, 1:10, 1:20, 1:40, 100) # Vector<- c(runif(30))
Vector
hist(Vector)
numberOfBins <- 7
# Discretization into 4 bins
range <- max(Vector) - min(Vector)
binWidth <- range / numberOfBins
bin1Min <- -Inf
bin1Max <- min(Vector) + 1*binWidth
bin2Min <- bin1Max
bin2Max <- min(Vector) + 2*binWidth
bin3Min <- bin1Max
bin3Max <- min(Vector) + 3*binWidth
bin4Min <- bin3Max
bin4Max <- min(Vector) + 4*binWidth
bin5Min <- bin4Max
bin5Max <- min(Vector) + 5*binWidth
bin6Min <- bin5Max
bin6Max <- min(Vector) + 6*binWidth
bin7Min <- bin6Max
bin7Max <- Inf
xDiscretized <- rep(NA, length(Vector))
xDiscretized
xDiscretized[bin1Min < Vector & Vector <= bin1Max] <- "L1"
xDiscretized
xDiscretized[bin2Min < Vector & Vector <= bin2Max] <- "L2"
xDiscretized
xDiscretized[bin3Min < Vector & Vector <= bin3Max] <- "L3"
xDiscretized[bin4Min < Vector & Vector <= bin4Max] <- "L4"
xDiscretized[bin5Min < Vector & Vector <= bin5Max] <- "L5"
xDiscretized[bin6Min < Vector & Vector <= bin6Max] <- "L6"
xDiscretized[bin7Min < Vector & Vector <= bin7Max] <- "L7"
xDiscretized
quantileBinMax <- function(Vector=c(1,1,1,2,2,2,10), numberOfBins=2)
{
binMax <- NA
for (i in 1:(numberOfBins-1))
{
binMax[i] <- quantile(Vector, i/numberOfBins)
}
c(-Inf, binMax,+Inf)
}
binLimits <- quantileBinMax(Vector, numberOfBins)
cut(Vector, binLimits, right=T)
?hist
hist(Vector, c(min(Vector), binLimits[2:(length(binLimits)-1)], max(Vector)))
quantile(1:11, .49)
# Clear Workspace
rm(list=ls())
# Clear Console:
cat("\014")
library(ggplot2)
library(reshape2)
Loaddata <- function(file)
{
#browser()
## Read the csv file
Dataload <- read.csv(file, header = TRUE,stringsAsFactors = FALSE)
## Remove cases or rows with missing values. In this case we keep the
## rows which do not have nas.
Dataload[complete.cases(Dataload), ]
return(Dataload)
}
#MinMax Function
MinMax <- function(Column)
{
x <- Column
y <- 1000*x
a <- min(x)
b <- max(x) - min(x)
minmaxnormalized <- (x - a) / b
return(minmaxnormalized)
}
#Discretize Function
Discretize <- function(Column)
{
browser()
x1 <- Column
range <- max(x1) - min(x1)
binWidth <- range / 3
bin1Min <- -Inf
bin1Max <- min(x1) + binWidth
bin2Max <- min(x1) + 2*binWidth
bin3Max <- min(x1) + 3*binWidth
bin4Max <- Inf
xDiscretized <- rep(NA, length(x1))
xDiscretized[bin1Min < x1 & x1 <= bin1Max] <- "Low"
xDiscretized[bin1Max < x1 & x1 <= bin2Max] <- "Medium"
xDiscretized[bin2Max < x1 & x1 <= bin4Max] <- "High"
#xDiscretized[bin3Max < x1 & x1 <= bin4Max] <- "Very High"
return(xDiscretized)
}
# Load the file.
videostore <- Loaddata('Video_Store.csv')
# Check the structure of the data frame.
str(videostore)
# Check the header data
head(videostore)
#Check the summary of the data frame.
lapply(videostore, summary)
#Data visualization
ggplot(data = melt(videostore), mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~variable, scales = 'free_x')
#Min-Max Normalization:
#Income
minmaxnormalized<- MinMax(videostore$Income)
videostore$minmaxIncome <- minmaxnormalized
#Age
minmaxnormalized<- MinMax(videostore$Age)
videostore$minmaxAge <- minmaxnormalized
#Rentals
minmaxnormalized<- MinMax(videostore$Rentals)
videostore$minmaxRentals <- minmaxnormalized
#Avg.Per.Visit
minmaxnormalized<- MinMax(videostore$Avg.Per.Visit)
videostore$minmaxAvgPerVisit <- minmaxnormalized
#z-Score Normalizaition
videostore$zScoreRental <- scale(videostore$Rentals)
#Discretization into 3 bins
#Income
xDiscretized <- Discretize(videostore$Income)
videostore$IncomeBin <- xDiscretized
#Age
xDiscretized <- Discretize(videostore$Age)
videostore$AgeBin <- xDiscretized
#Write dataframe to a csv file.
write.csv(videostore, file = "videostoreupdated.csv")
# Unique Genre values.
unique(videostore$Genre)
# Binarize.
videostore$BinarizedGender <- ifelse(videostore$Gender == 'M',1,0)
videostore$BinarizedGenre <- ifelse(videostore$Genre == 'Action',1,(ifelse(videostore$Genre == 'Drama',2,3)))
# Check the header data after binarizing the categorical variables.
head(videostore)
# Boxplot of Movie Rental By Genre.
boxplot(Rentals~Genre,data=videostore, main="Movie Rental by Genre",
xlab="Movie Genre", ylab="Rental Count")
# Action genre is popular in the general population.
# Boxplot of Movie Rental By Income.
boxplot(Rentals~IncomeBin,data=videostore, main="Movie Rental by Income",
xlab="Income Bin", ylab="Rental Count")
#Low income group rents the highest number of videos.
table(videostore$Gender,videostore$Genre)
#Females watch more of drama and men watch more of action.
# Boxplot of Gender by Genre
boxplot(BinarizedGender~Genre,data=videostore, main="Gender by Genre",
xlab="Genre", ylab="Gender")
#Females watch more of drama and men watch more of action.
# Boxplot of Gender by rental
boxplot(Rentals~Gender,data=videostore, main="Rental by Gender",
xlab="Gender", ylab="Rental")
#In general population Males watch more videos.
#h
#Analyse good customers.
videostoregoodcust <- videostore[videostore$Rentals >= 30,]
#Write dataframe to a csv file.
write.csv(videostoregoodcust, file = "videostorgoodcustomers.csv")
# Boxplot of Movie Rental By Genre.
boxplot(Rentals~Genre,data=videostoregoodcust, main="Movie Rental by Genre for good customers",
xlab="Movie Genre", ylab="Rental Count")
#Good customers tend to watch more movies of drama genre followed by action genre.
# Boxplot of Gender by rental
boxplot(Rentals~Gender,data=videostoregoodcust, main="Rental by Gender for good customers",
xlab="Gender", ylab="Rental")
#Females rent the highest number of vides in the category of good customers.
#Check the summary of good customers.
lapply(videostoregoodcust, summary)
#Check the summary of general customers.
lapply(videostore, summary)
#Mean income of good customers is lower than the general customers.
#Mean age of good customers is lower than the general customers.
#Mean rentals of good customers are higher than general customers.
#Mean Avg.Per.Visit of good customers is slightly higher than general customers, median value however is lower for good customers.
# Boxplot of income by incidentals
boxplot(minmaxIncome~Incidentals,data=videostore, main="Income by incidentals",
xlab="Incidentals", ylab="Income")
#Income does not affect the incidentals.
# Boxplot of Genre by incidentals
boxplot(BinarizedGenre~Incidentals,data=videostore, main="Genre by incidentals",
xlab="Incidentals", ylab="Genre")
#More movies with action genre should increase the incidentals.
# Clear Workspace
rm(list=ls())
# Clear Console:
cat("\014")
library(ggplot2)
library(reshape2)
Loaddata <- function(file)
{
#browser()
## Read the csv file
Dataload <- read.csv(file, header = TRUE,stringsAsFactors = FALSE)
## Remove cases or rows with missing values. In this case we keep the
## rows which do not have nas.
Dataload[complete.cases(Dataload), ]
return(Dataload)
}
#MinMax Function
MinMax <- function(Column)
{
x <- Column
y <- 1000*x
a <- min(x)
b <- max(x) - min(x)
minmaxnormalized <- (x - a) / b
return(minmaxnormalized)
}
#Discretize Function
Discretize <- function(Column)
{
#browser()
x1 <- Column
range <- max(x1) - min(x1)
binWidth <- range / 3
bin1Min <- -Inf
bin1Max <- min(x1) + binWidth
bin2Max <- min(x1) + 2*binWidth
bin3Max <- min(x1) + 3*binWidth
bin4Max <- Inf
xDiscretized <- rep(NA, length(x1))
xDiscretized[bin1Min < x1 & x1 <= bin1Max] <- "Low"
xDiscretized[bin1Max < x1 & x1 <= bin2Max] <- "Medium"
xDiscretized[bin2Max < x1 & x1 <= bin4Max] <- "High"
#xDiscretized[bin3Max < x1 & x1 <= bin4Max] <- "Very High"
return(xDiscretized)
}
# Load the file.
videostore <- Loaddata('Video_Store.csv')
# Check the structure of the data frame.
str(videostore)
# Check the header data
head(videostore)
#Check the summary of the data frame.
lapply(videostore, summary)
#Data visualization
ggplot(data = melt(videostore), mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~variable, scales = 'free_x')
#Min-Max Normalization:
#Income
minmaxnormalized<- MinMax(videostore$Income)
videostore$minmaxIncome <- minmaxnormalized
#Age
minmaxnormalized<- MinMax(videostore$Age)
videostore$minmaxAge <- minmaxnormalized
#Rentals
minmaxnormalized<- MinMax(videostore$Rentals)
videostore$minmaxRentals <- minmaxnormalized
#Avg.Per.Visit
minmaxnormalized<- MinMax(videostore$Avg.Per.Visit)
videostore$minmaxAvgPerVisit <- minmaxnormalized
#z-Score Normalizaition
videostore$zScoreRental <- scale(videostore$Rentals)
#Discretization into 3 bins
#Income
xDiscretized <- Discretize(videostore$Income)
videostore$IncomeBin <- xDiscretized
#Age
xDiscretized <- Discretize(videostore$Age)
videostore$AgeBin <- xDiscretized
#Write dataframe to a csv file.
write.csv(videostore, file = "videostoreupdated.csv")
# Unique Genre values.
unique(videostore$Genre)
# Binarize.
videostore$BinarizedGender <- ifelse(videostore$Gender == 'M',1,0)
videostore$BinarizedGenre <- ifelse(videostore$Genre == 'Action',1,(ifelse(videostore$Genre == 'Drama',2,3)))
# Check the header data after binarizing the categorical variables.
head(videostore)
# Boxplot of Movie Rental By Genre.
boxplot(Rentals~Genre,data=videostore, main="Movie Rental by Genre",
xlab="Movie Genre", ylab="Rental Count")
# Action genre is popular in the general population.
# Boxplot of Movie Rental By Income.
boxplot(Rentals~IncomeBin,data=videostore, main="Movie Rental by Income",
xlab="Income Bin", ylab="Rental Count")
#Low income group rents the highest number of videos.
table(videostore$Gender,videostore$Genre)
#Females watch more of drama and men watch more of action.
# Boxplot of Gender by Genre
boxplot(BinarizedGender~Genre,data=videostore, main="Gender by Genre",
xlab="Genre", ylab="Gender")
#Females watch more of drama and men watch more of action.
# Boxplot of Gender by rental
boxplot(Rentals~Gender,data=videostore, main="Rental by Gender",
xlab="Gender", ylab="Rental")
#In general population Males watch more videos.
#h
#Analyse good customers.
videostoregoodcust <- videostore[videostore$Rentals >= 30,]
#Write dataframe to a csv file.
write.csv(videostoregoodcust, file = "videostorgoodcustomers.csv")
# Boxplot of Movie Rental By Genre.
boxplot(Rentals~Genre,data=videostoregoodcust, main="Movie Rental by Genre for good customers",
xlab="Movie Genre", ylab="Rental Count")
#Good customers tend to watch more movies of drama genre followed by action genre.
# Boxplot of Gender by rental
boxplot(Rentals~Gender,data=videostoregoodcust, main="Rental by Gender for good customers",
xlab="Gender", ylab="Rental")
#Females rent the highest number of vides in the category of good customers.
#Check the summary of good customers.
lapply(videostoregoodcust, summary)
#Check the summary of general customers.
lapply(videostore, summary)
#Mean income of good customers is lower than the general customers.
#Mean age of good customers is lower than the general customers.
#Mean rentals of good customers are higher than general customers.
#Mean Avg.Per.Visit of good customers is slightly higher than general customers, median value however is lower for good customers.
# Boxplot of income by incidentals
boxplot(minmaxIncome~Incidentals,data=videostore, main="Income by incidentals",
xlab="Incidentals", ylab="Income")
#Income does not affect the incidentals.
# Boxplot of Genre by incidentals
boxplot(BinarizedGenre~Incidentals,data=videostore, main="Genre by incidentals",
xlab="Incidentals", ylab="Genre")
#More movies with action genre should increase the incidentals.
# Clear Workspace
rm(list=ls())
# Clear Console:
cat("\014")
library(ggplot2)
library(reshape2)
Loaddata <- function(file)
{
#browser()
## Read the csv file
Dataload <- read.csv(file, header = TRUE,stringsAsFactors = FALSE)
## Remove cases or rows with missing values. In this case we keep the
## rows which do not have nas.
Dataload[complete.cases(Dataload), ]
return(Dataload)
}
#MinMax Function
MinMax <- function(Column)
{
x <- Column
y <- 1000*x
a <- min(x)
b <- max(x) - min(x)
minmaxnormalized <- (x - a) / b
return(minmaxnormalized)
}
#Discretize Function
Discretize <- function(Column)
{
#browser()
x1 <- Column
range <- max(x1) - min(x1)
binWidth <- range / 3
bin1Min <- -Inf
bin1Max <- min(x1) + binWidth
bin2Max <- min(x1) + 2*binWidth
bin3Max <- min(x1) + 3*binWidth
bin4Max <- Inf
xDiscretized <- rep(NA, length(x1))
xDiscretized[bin1Min < x1 & x1 <= bin1Max] <- "Low"
xDiscretized[bin1Max < x1 & x1 <= bin2Max] <- "Medium"
xDiscretized[bin2Max < x1 & x1 <= bin4Max] <- "High"
#xDiscretized[bin3Max < x1 & x1 <= bin4Max] <- "Very High"
return(xDiscretized)
}
# Load the file.
videostore <- Loaddata('Video_Store.csv')
# Check the structure of the data frame.
str(videostore)
# Check the header data
head(videostore)
#Check the summary of the data frame.
lapply(videostore, summary)
#Data visualization
ggplot(data = melt(videostore), mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~variable, scales = 'free_x')
#Min-Max Normalization:
#Income
minmaxnormalized<- MinMax(videostore$Income)
videostore$minmaxIncome <- minmaxnormalized
#Age
minmaxnormalized<- MinMax(videostore$Age)
videostore$minmaxAge <- minmaxnormalized
#Rentals
minmaxnormalized<- MinMax(videostore$Rentals)
videostore$minmaxRentals <- minmaxnormalized
#Avg.Per.Visit
minmaxnormalized<- MinMax(videostore$Avg.Per.Visit)
videostore$minmaxAvgPerVisit <- minmaxnormalized
#z-Score Normalizaition
videostore$zScoreRental <- scale(videostore$Rentals)
#Discretization into 3 bins
#Income
xDiscretized <- Discretize(videostore$Income)
videostore$IncomeBin <- xDiscretized
#Age
xDiscretized <- Discretize(videostore$Age)
videostore$AgeBin <- xDiscretized
#Write dataframe to a csv file (A to D).
write.csv(videostore, file = "videostorAtoD.csv")
# Unique Genre values.
unique(videostore$Genre)
# Binarize.
videostore$BinarizedGender <- ifelse(videostore$Gender == 'M',1,0)
videostore$BinarizedGenre <- ifelse(videostore$Genre == 'Action',1,(ifelse(videostore$Genre == 'Drama',2,3)))
# Check the header data after binarizing the categorical variables.
head(videostore)
# Boxplot of Movie Rental By Genre.
boxplot(Rentals~Genre,data=videostore, main="Movie Rental by Genre",
xlab="Movie Genre", ylab="Rental Count")
# Action genre is popular in the general population.
# Boxplot of Movie Rental By Income.
boxplot(Rentals~IncomeBin,data=videostore, main="Movie Rental by Income",
xlab="Income Bin", ylab="Rental Count")
#Low income group rents the highest number of videos.
table(videostore$Gender,videostore$Genre)
#Females watch more of drama and men watch more of action.
# Boxplot of Gender by Genre
boxplot(BinarizedGender~Genre,data=videostore, main="Gender by Genre",
xlab="Genre", ylab="Gender")
#Females watch more of drama and men watch more of action.
# Boxplot of Gender by rental
boxplot(Rentals~Gender,data=videostore, main="Rental by Gender",
xlab="Gender", ylab="Rental")
#In general population Males watch more videos.
#h
#Analyse good customers.
videostoregoodcust <- videostore[videostore$Rentals >= 30,]
# Boxplot of Movie Rental By Genre.
boxplot(Rentals~Genre,data=videostoregoodcust, main="Movie Rental by Genre for good customers",
xlab="Movie Genre", ylab="Rental Count")
#Good customers tend to watch more movies of drama genre followed by action genre.
# Boxplot of Gender by rental
boxplot(Rentals~Gender,data=videostoregoodcust, main="Rental by Gender for good customers",
xlab="Gender", ylab="Rental")
#Females rent the highest number of vides in the category of good customers.
#Check the summary of good customers.
lapply(videostoregoodcust, summary)
#Check the summary of general customers.
lapply(videostore, summary)
#Mean income of good customers is lower than the general customers.
#Mean age of good customers is lower than the general customers.
#Mean rentals of good customers are higher than general customers.
#Mean Avg.Per.Visit of good customers is slightly higher than general customers, median value however is lower for good customers.
# Boxplot of income by incidentals
boxplot(minmaxIncome~Incidentals,data=videostore, main="Income by incidentals",
xlab="Incidentals", ylab="Income")
#Income does not affect the incidentals.
# Boxplot of Genre by incidentals
boxplot(BinarizedGenre~Incidentals,data=videostore, main="Genre by incidentals",
xlab="Incidentals", ylab="Genre")
#More movies with action genre should increase the incidentals.
#Write dataframe to a csv file(E to I).
write.csv(videostoregoodcust, file = "videostoreEtoI.csv")
